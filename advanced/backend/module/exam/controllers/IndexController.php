<?php

namespace backend\module\exam\controllers;

use phpDocumentor\Reflection\Types\This;
use yii\db\Exception;
use yii\web\Controller;
use yii\common\models\Exam;
use yii\common\models\Examtail;
use yii\common\models\Chooseq;
use yii\common\models\Fillq;
use yii\common\models\Programq;
use yii\web\Response;
use yii\web\Request;
use yii\db\Query;
use yii\db\ActiveRecord;
use yii\helpers\ArrayHelper;
use yii\filters\Cors;
use yii\behaviors\TimestampBehavior;

/**
 * Default controller for the `exam` module
 */
class IndexController extends Controller
{
    public function actionIndex()
    {
        return "exam-index"; // TODO: Change the autogenerated stub
    }
    /*
     * 查看全部的试卷
     * 标志：flag
     * 1：有效试卷
     * 2：已删除试卷
     * 3：所有试卷
     */
    public function actionQueryexam()
    {
        $request=\Yii::$app->request;
        $flag = $request->post("flag");
        if($flag==1)
        {
            $query = (new Query())
                ->select('*')
                ->from('exam')
                ->where(['exstatus'=>1])
                ->all();
            return array("data"=>$query,"msg"=>"有效试卷");
        }
        else if($flag==2)
        {
            $query = (new Query())
                ->select('*')
                ->from('exam')
                ->where(['exstatus'=>0])
                ->all();
            return array("data"=>$query,"msg"=>"已删除试卷");
        }
        else if($flag==3)
        {
            $query = (new Query())
                ->select('*')
                ->from('exam')
                ->all();
            return array("data"=>$query,"msg"=>"全部试卷");
        }
        else{
            return array("data"=>$flag,"msg"=>"输入错误");
        }

    }
    /*
     * 生成随机数函数:要求生成的随机数不重复
     */
    public function Rand($min,$max,$num)
    {
        $count =0;
        $result = array();
        while ($count<$num)
        {
            $result[]=mt_rand($min,$max);
            $result =array_flip(array_flip($result));
            $count = $count+1;
        }
        //打乱数组，重新赋予数组的新的下标
        shuffle($result);
        return $result;
    }
    public function actionTest()
    {
        $min = 1;
        $max = 10;
        $num =5;
        $arr = $this->Rand($min,$max,$num);
        return array("data"=>$arr,"msg"=>"产生的随机数");
    }
    /*
     * 组卷：
     * 两种形式：自动组卷（随机）、人为选择组卷
     * 选择标志：flag
     * 自动组卷：设定选择题、填空题、程序题数量n,在各自题库中随机抽取组合成为一套试卷；
     * 参数：试卷名（exname）、选择题数（numc）、填空题数（numf）、程序题数（nump）
     * 人为选择组卷：手工选择各自题库中的题目组成一套试卷；
     * 参数：
     */
    public function actionAddexam()
    {
        $request = \Yii::$app->request;
        $flag = $request->post("flag");
        $id = (new Query())
            ->select("exid")
            ->from("exam")
            ->where(['exstatus'=>1])
            ->max();
        $id = $id+1;
        $exname = $request->post('exname');
        if($flag==1)
        {
            //自动组卷
            /*
             * 自动组卷中设定选择题，填空题，程序题的个数
             */
            $numc = $request->post('numc');
            $numf = $request->post('numf');
            $nump = $request->post('nump');

            //不考虑题库中题数目不足的情况
            //所有的题库表的id都是从1开始的，从中产生随机数id，插入到数据库中；
            $min = 1;
            //选择选择题
            $queryc = (new Query())
                ->select("*")
                ->from("chooseq")
                ->where(['cqstatus'=>1])
                ->max();
            $i = 0;
            while ($i<$numc)
            {
                //每次产生一个随机数
                $arrc = $this->Rand($min,$queryc,1);
                //在题库中查找对应的cqid,
                //如果存在该id将其插入到题库中，
                //如果不存在需要继续产生随机数
                $queryc1 = (new Query())
                    ->select("*")
                    ->from("chooseq")
                    ->where(['cqid'=>$arrc[0]])
                    ->andWhere(['cqstatus'=>1])
                    ->one();
                if($queryc1)
                {
                    $i = $i+1;
                    //插入试卷详情表中其中
                    $insertc = \Yii::$app->db->createCommand()->insert('examtail',array('exid'=>$id,
                        'qid'=>$arrc[0],'qtypeid'=>1,'exsatus'=>1))->execute();
                    if($insertc)
                    {
                        return array("data"=>$insertc,"msg"=>$i."插入填空题".$arrc[0]."成功");
                    }
                    else
                    {
                        return array("data"=>$insertc,"msg"=>$i."填空题".$arrc[0]."已插入");
                    }
                }
                else{
                    //继续产生随机数
//                    $i = $i;
                    //$i值不变
                }
            }
            //选择填空题
            $queryf = (new Query())
                ->select("*")
                ->from("fillq")
                ->where(['fqstatus'=>1])
                ->max();
            $j=0;
            while ($j<$numf)
            {
                $arrf = $this->Rand($min,$queryf,1);
                $queryf1=(new Query())
                    ->select("*")
                    ->from('fillq')
                    ->where(['fqid'=>$arrf[0]])
                    ->andWhere(['fqstatus'=>1])
                    ->one();
                if($queryf1)
                {
                    $j=$j+1;
                    //插入试卷详情表中其中
                    $insertf = \Yii::$app->db->createCommand()->insert('examtail',array('exid'=>$id,
                        'qid'=>$arrc[0],'qtypeid'=>2,'exsatus'=>1))->execute();
                    if($insertf)
                    {
                        return array("data"=>$insertf,"msg"=>$j."插入填空题".$arrf[0]."成功");
                    }
                    else
                    {
                        return array("data"=>$insertf,"msg"=>$j."填空题".$arrf[0]."已插入");
                    }
                }
                else
                {
                    //表中没有随机数产生的内容，需要重新产生数据数
                }
            }
            //选择程序题
            $queryp = (new Query())
                ->select("*")
                ->from("programq")
                ->where(['pqstatus'=>1])
                ->max();
            $k =0;
            while ($k<$nump)
            {
                $arrp = $this->Rand($min,$queryp,$nump);
                $queryp1=(new Query())
                    ->select("*")
                    ->from('programq')
                    ->where(['pqid'=>$arrp[0]])
                    ->andWhere(['pqstatus'=>1])
                    ->one();
                if($queryp1)
                {
                    $k=$k+1;
                    //插入试卷详情表中其中
                    $insertp = \Yii::$app->db->createCommand()->insert('examtail',array('exid'=>$id,
                        'qid'=>$arrp[0],'qtypeid'=>3,'exsatus'=>1))->execute();
                    if($insertp)
                    {
                        return array("data"=>$insertp,"msg"=>$k."插入程序题".$arrp[0]."成功");
                    }
                    else
                    {
                        return array("data"=>$insertp,"msg"=>$k."程序题".$arrp[0]."已插入");
                    }
                }
                else
                {
                    //表中没有随机数产生的内容，需要重新产生数据数
                }
            }
            $createtime = date('Y-m-d H:i:s',time());
            $insertexam = \Yii::$app->db->createCommand()->insert('exam',array('exid'=>$id,'exname'=>$exname,
                'createtime'=>$createtime,'exsatus'=>1))->execute();
            if($insertexam)
            {
                return array("data"=>$insertexam,"msg"=>"自动组卷成功");
            }
            else
            {
                return array("data"=>$insertexam,"msg"=>"该试卷已创建");
            }
        }
        else if($flag==2)
        {
            //手动组卷
        }
        else{
            return array("data"=>$flag,"msg"=>"输入错误");
        }

    }
    /*
     * 删除试卷：永久删除和暂时删除
     * 选择标志：flag
     * 1:暂时删除
     * 2：永久删除
     * 试卷删除时需要更新试卷表和试卷详情表
     * 参数：试卷id(exid)
     */
    public function actionDeleteexam()
    {
        $request = \Yii::$app->request;
        $flag = $request->post('flag');
        $id =$request->post('exid');
        $query = (new Query())
            ->select("*")
            ->from('exam')
            ->where(['exid'=>$id])
            ->one();
        if($flag==1)
        {
            //暂时删除
            if($query)
            {
                $update1 = \Yii::$app->db->createCommand()->update('exam',['exstatus'=>0],"exid={$id}")->execute();
                $update2 = \Yii::$app->db->createCommand()->update('examtail',['exstatus'=>0],"exid={$id}")->execute();
                if($update1 and $update2)
                {
                    return array("data"=>[$flag,$update1,$update2],"msg"=>"删除成功");
                }
                else{
                    return array("data"=>[$flag,$update1,$update2],"msg"=>"已删除，请勿重复删除");
                }
            }
            else{
                return array("data"=>$flag,"msg"=>"未找到该试卷");
            }
        }
        else if($flag==2)
        {
            //永久删除
            if($query)
            {
                $delete1 = \Yii::$app->db->createCommand()->delete('exam',['exid'=>$id])->execute();
                $delete2 = \Yii::$app->db->createCommand()->delete('examtail',['exid'=>$id])->execute();
                if($delete1 and $delete2)
                {
                    return array("data"=>[$flag,$delete1,$delete2],"msg"=>"完全删除成功");
                }
                else{
                    return array("data"=>[$flag,$delete1,$delete2],"msg"=>"已完全删除，请勿重复删除");
                }
            }
            else{
                return array("data"=>$flag,"msg"=>"未找到该试卷");
            }
        }
        else{
            return array("data"=>$flag,"msg"=>"输入错误");
        }
    }
    /*
     * 修改试卷：添加或者删除试卷中的某一个题目
     * 标志：flag
     * 1:添加一个题目到某个试卷
     * 2：从某试卷中删除一道题目
     */
    public function actionChangeexam()
    {

    }

}